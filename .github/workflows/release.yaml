name: Cut Release

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

env:
  VERSION_FILE: pkg/version/version.go

jobs:
  tag:
    if: ${{ github.repository }} == 'chainguard-dev/bincapz'
    runs-on: ubuntu-latest
    steps:
    - uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6
      with:
        egress-policy: audit
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
    - uses: chainguard-dev/actions/setup-gitsign@e82b4e5ae10182af72972addcb3fedf7454621c8
    - name: Get Version
      id: get-version
      run: |
        VERSION=$(awk -F'"' '/ID string =/ {print $2}' ${{ env.VERSION_FILE }})
        if [[ ! "${VERSION}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: VERSION is not a valid semver"
          exit 1
        fi
        echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
    - name: Create Release
      env:
        GH_TOKEN: ${{ github.token }}
      if: ${{ steps.get-version.outputs.VERSION != '' }}
      run: |
        VERSION=${{ steps.get-version.outputs.VERSION }}
        if [[ ! "${VERSION}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: VERSION is not a valid semver"
          exit 1
        fi
        git config --global tag.gpgsign true
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        gh release create "$VERSION" --title "$VERSION" --notes "Release $VERSION" --draft --generate-notes
        gitsign verify $(git rev-list --tags --max-count=1) --certificate-identity-regexp="https://github.com/${{ github.repository }}/*" --certificate-oidc-issuer="https://token.actions.githubusercontent.com"
